// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLandlordConversationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardViewImage;

  @NonNull
  public final TextView conversationTitle;

  @NonNull
  public final TextView lastMessage;

  @NonNull
  public final TextView lastMessageTimeText;

  @NonNull
  public final LinearLayout len;

  @NonNull
  public final ImageView profile;

  private ItemLandlordConversationBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView cardViewImage, @NonNull TextView conversationTitle,
      @NonNull TextView lastMessage, @NonNull TextView lastMessageTimeText,
      @NonNull LinearLayout len, @NonNull ImageView profile) {
    this.rootView = rootView;
    this.cardViewImage = cardViewImage;
    this.conversationTitle = conversationTitle;
    this.lastMessage = lastMessage;
    this.lastMessageTimeText = lastMessageTimeText;
    this.len = len;
    this.profile = profile;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLandlordConversationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLandlordConversationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_landlord_conversation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLandlordConversationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViewImage;
      CardView cardViewImage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewImage == null) {
        break missingId;
      }

      id = R.id.conversationTitle;
      TextView conversationTitle = ViewBindings.findChildViewById(rootView, id);
      if (conversationTitle == null) {
        break missingId;
      }

      id = R.id.lastMessage;
      TextView lastMessage = ViewBindings.findChildViewById(rootView, id);
      if (lastMessage == null) {
        break missingId;
      }

      id = R.id.last_message_time_text;
      TextView lastMessageTimeText = ViewBindings.findChildViewById(rootView, id);
      if (lastMessageTimeText == null) {
        break missingId;
      }

      id = R.id.len;
      LinearLayout len = ViewBindings.findChildViewById(rootView, id);
      if (len == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      return new ItemLandlordConversationBinding((RelativeLayout) rootView, cardViewImage,
          conversationTitle, lastMessage, lastMessageTimeText, len, profile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
