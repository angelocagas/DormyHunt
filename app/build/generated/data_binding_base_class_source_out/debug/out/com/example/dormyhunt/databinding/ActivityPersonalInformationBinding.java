// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonalInformationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton backbtn;

  @NonNull
  public final CardView cardViewImage;

  @NonNull
  public final TextInputEditText confirmPassword;

  @NonNull
  public final TextInputLayout confirmPasswordLayout;

  @NonNull
  public final ImageView ivProfilePicture;

  @NonNull
  public final TextView lblconfirmPassword;

  @NonNull
  public final TextView lblconfirmPassword2;

  @NonNull
  public final TextView lblloginMobileNumber;

  @NonNull
  public final TextView lblloginMobileNumber2;

  @NonNull
  public final TextView lblprofileEmail;

  @NonNull
  public final TextView lblprofileEmail2;

  @NonNull
  public final TextView lblprofileUsername;

  @NonNull
  public final TextView lblprofileUsername2;

  @NonNull
  public final CountryCodePicker loginCountrycode;

  @NonNull
  public final TextInputEditText loginMobileNumber;

  @NonNull
  public final TextInputLayout loginMobileNumberLayout;

  @NonNull
  public final TextInputEditText profileEmail;

  @NonNull
  public final TextInputLayout profileEmailLayout;

  @NonNull
  public final ProgressBar profileProgressBar;

  @NonNull
  public final TextInputEditText profileUsername;

  @NonNull
  public final TextInputLayout profileUsernameLayout;

  @NonNull
  public final AppCompatButton profleUpdateBtn;

  private ActivityPersonalInformationBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton backbtn, @NonNull CardView cardViewImage,
      @NonNull TextInputEditText confirmPassword, @NonNull TextInputLayout confirmPasswordLayout,
      @NonNull ImageView ivProfilePicture, @NonNull TextView lblconfirmPassword,
      @NonNull TextView lblconfirmPassword2, @NonNull TextView lblloginMobileNumber,
      @NonNull TextView lblloginMobileNumber2, @NonNull TextView lblprofileEmail,
      @NonNull TextView lblprofileEmail2, @NonNull TextView lblprofileUsername,
      @NonNull TextView lblprofileUsername2, @NonNull CountryCodePicker loginCountrycode,
      @NonNull TextInputEditText loginMobileNumber,
      @NonNull TextInputLayout loginMobileNumberLayout, @NonNull TextInputEditText profileEmail,
      @NonNull TextInputLayout profileEmailLayout, @NonNull ProgressBar profileProgressBar,
      @NonNull TextInputEditText profileUsername, @NonNull TextInputLayout profileUsernameLayout,
      @NonNull AppCompatButton profleUpdateBtn) {
    this.rootView = rootView;
    this.backbtn = backbtn;
    this.cardViewImage = cardViewImage;
    this.confirmPassword = confirmPassword;
    this.confirmPasswordLayout = confirmPasswordLayout;
    this.ivProfilePicture = ivProfilePicture;
    this.lblconfirmPassword = lblconfirmPassword;
    this.lblconfirmPassword2 = lblconfirmPassword2;
    this.lblloginMobileNumber = lblloginMobileNumber;
    this.lblloginMobileNumber2 = lblloginMobileNumber2;
    this.lblprofileEmail = lblprofileEmail;
    this.lblprofileEmail2 = lblprofileEmail2;
    this.lblprofileUsername = lblprofileUsername;
    this.lblprofileUsername2 = lblprofileUsername2;
    this.loginCountrycode = loginCountrycode;
    this.loginMobileNumber = loginMobileNumber;
    this.loginMobileNumberLayout = loginMobileNumberLayout;
    this.profileEmail = profileEmail;
    this.profileEmailLayout = profileEmailLayout;
    this.profileProgressBar = profileProgressBar;
    this.profileUsername = profileUsername;
    this.profileUsernameLayout = profileUsernameLayout;
    this.profleUpdateBtn = profleUpdateBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonalInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonalInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_personal_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonalInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbtn;
      AppCompatButton backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.cardViewImage;
      CardView cardViewImage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewImage == null) {
        break missingId;
      }

      id = R.id.confirmPassword;
      TextInputEditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.confirmPasswordLayout;
      TextInputLayout confirmPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLayout == null) {
        break missingId;
      }

      id = R.id.ivProfilePicture;
      ImageView ivProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (ivProfilePicture == null) {
        break missingId;
      }

      id = R.id.lblconfirmPassword;
      TextView lblconfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (lblconfirmPassword == null) {
        break missingId;
      }

      id = R.id.lblconfirmPassword2;
      TextView lblconfirmPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (lblconfirmPassword2 == null) {
        break missingId;
      }

      id = R.id.lbllogin_mobile_number;
      TextView lblloginMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (lblloginMobileNumber == null) {
        break missingId;
      }

      id = R.id.lbllogin_mobile_number2;
      TextView lblloginMobileNumber2 = ViewBindings.findChildViewById(rootView, id);
      if (lblloginMobileNumber2 == null) {
        break missingId;
      }

      id = R.id.lblprofile_email;
      TextView lblprofileEmail = ViewBindings.findChildViewById(rootView, id);
      if (lblprofileEmail == null) {
        break missingId;
      }

      id = R.id.lblprofile_email2;
      TextView lblprofileEmail2 = ViewBindings.findChildViewById(rootView, id);
      if (lblprofileEmail2 == null) {
        break missingId;
      }

      id = R.id.lblprofile_username;
      TextView lblprofileUsername = ViewBindings.findChildViewById(rootView, id);
      if (lblprofileUsername == null) {
        break missingId;
      }

      id = R.id.lblprofile_username2;
      TextView lblprofileUsername2 = ViewBindings.findChildViewById(rootView, id);
      if (lblprofileUsername2 == null) {
        break missingId;
      }

      id = R.id.login_countrycode;
      CountryCodePicker loginCountrycode = ViewBindings.findChildViewById(rootView, id);
      if (loginCountrycode == null) {
        break missingId;
      }

      id = R.id.login_mobile_number;
      TextInputEditText loginMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (loginMobileNumber == null) {
        break missingId;
      }

      id = R.id.login_mobile_numberLayout;
      TextInputLayout loginMobileNumberLayout = ViewBindings.findChildViewById(rootView, id);
      if (loginMobileNumberLayout == null) {
        break missingId;
      }

      id = R.id.profile_email;
      TextInputEditText profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profile_emailLayout;
      TextInputLayout profileEmailLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileEmailLayout == null) {
        break missingId;
      }

      id = R.id.profile_progress_bar;
      ProgressBar profileProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (profileProgressBar == null) {
        break missingId;
      }

      id = R.id.profile_username;
      TextInputEditText profileUsername = ViewBindings.findChildViewById(rootView, id);
      if (profileUsername == null) {
        break missingId;
      }

      id = R.id.profile_usernameLayout;
      TextInputLayout profileUsernameLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileUsernameLayout == null) {
        break missingId;
      }

      id = R.id.profle_update_btn;
      AppCompatButton profleUpdateBtn = ViewBindings.findChildViewById(rootView, id);
      if (profleUpdateBtn == null) {
        break missingId;
      }

      return new ActivityPersonalInformationBinding((ConstraintLayout) rootView, backbtn,
          cardViewImage, confirmPassword, confirmPasswordLayout, ivProfilePicture,
          lblconfirmPassword, lblconfirmPassword2, lblloginMobileNumber, lblloginMobileNumber2,
          lblprofileEmail, lblprofileEmail2, lblprofileUsername, lblprofileUsername2,
          loginCountrycode, loginMobileNumber, loginMobileNumberLayout, profileEmail,
          profileEmailLayout, profileProgressBar, profileUsername, profileUsernameLayout,
          profleUpdateBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
