// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LandlordHomeFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clAvailableUnits;

  @NonNull
  public final ConstraintLayout clComplaints;

  @NonNull
  public final ConstraintLayout clRentedUnits;

  @NonNull
  public final ConstraintLayout clTotalEarnings;

  @NonNull
  public final ConstraintLayout clTotalUnits;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView ivGrayBG;

  @NonNull
  public final TabLayout tabLayoutComplaints;

  @NonNull
  public final TextView tvAvailableUnits;

  @NonNull
  public final TextView tvComplaints;

  @NonNull
  public final TextView tvComplaintsList;

  @NonNull
  public final TextView tvDashboard;

  @NonNull
  public final TextView tvRentedUnits;

  @NonNull
  public final TextView tvTenant1;

  @NonNull
  public final TextView tvTenant1Complaints;

  @NonNull
  public final TextView tvTenant2;

  @NonNull
  public final TextView tvTenant2Complaints;

  @NonNull
  public final TextView tvTenant3;

  @NonNull
  public final TextView tvTenant3Complaints;

  @NonNull
  public final TextView tvTenant4;

  @NonNull
  public final TextView tvTenant4Complaints;

  @NonNull
  public final TextView tvTenantList;

  @NonNull
  public final TextView tvTotalEarnings;

  @NonNull
  public final TextView tvTotalEarningsNumber;

  @NonNull
  public final TextView tvTotalUnits;

  private LandlordHomeFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clAvailableUnits, @NonNull ConstraintLayout clComplaints,
      @NonNull ConstraintLayout clRentedUnits, @NonNull ConstraintLayout clTotalEarnings,
      @NonNull ConstraintLayout clTotalUnits, @NonNull ImageView imageView2,
      @NonNull ImageView ivGrayBG, @NonNull TabLayout tabLayoutComplaints,
      @NonNull TextView tvAvailableUnits, @NonNull TextView tvComplaints,
      @NonNull TextView tvComplaintsList, @NonNull TextView tvDashboard,
      @NonNull TextView tvRentedUnits, @NonNull TextView tvTenant1,
      @NonNull TextView tvTenant1Complaints, @NonNull TextView tvTenant2,
      @NonNull TextView tvTenant2Complaints, @NonNull TextView tvTenant3,
      @NonNull TextView tvTenant3Complaints, @NonNull TextView tvTenant4,
      @NonNull TextView tvTenant4Complaints, @NonNull TextView tvTenantList,
      @NonNull TextView tvTotalEarnings, @NonNull TextView tvTotalEarningsNumber,
      @NonNull TextView tvTotalUnits) {
    this.rootView = rootView;
    this.clAvailableUnits = clAvailableUnits;
    this.clComplaints = clComplaints;
    this.clRentedUnits = clRentedUnits;
    this.clTotalEarnings = clTotalEarnings;
    this.clTotalUnits = clTotalUnits;
    this.imageView2 = imageView2;
    this.ivGrayBG = ivGrayBG;
    this.tabLayoutComplaints = tabLayoutComplaints;
    this.tvAvailableUnits = tvAvailableUnits;
    this.tvComplaints = tvComplaints;
    this.tvComplaintsList = tvComplaintsList;
    this.tvDashboard = tvDashboard;
    this.tvRentedUnits = tvRentedUnits;
    this.tvTenant1 = tvTenant1;
    this.tvTenant1Complaints = tvTenant1Complaints;
    this.tvTenant2 = tvTenant2;
    this.tvTenant2Complaints = tvTenant2Complaints;
    this.tvTenant3 = tvTenant3;
    this.tvTenant3Complaints = tvTenant3Complaints;
    this.tvTenant4 = tvTenant4;
    this.tvTenant4Complaints = tvTenant4Complaints;
    this.tvTenantList = tvTenantList;
    this.tvTotalEarnings = tvTotalEarnings;
    this.tvTotalEarningsNumber = tvTotalEarningsNumber;
    this.tvTotalUnits = tvTotalUnits;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LandlordHomeFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LandlordHomeFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.landlord_home_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LandlordHomeFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clAvailableUnits;
      ConstraintLayout clAvailableUnits = ViewBindings.findChildViewById(rootView, id);
      if (clAvailableUnits == null) {
        break missingId;
      }

      id = R.id.clComplaints;
      ConstraintLayout clComplaints = ViewBindings.findChildViewById(rootView, id);
      if (clComplaints == null) {
        break missingId;
      }

      id = R.id.clRentedUnits;
      ConstraintLayout clRentedUnits = ViewBindings.findChildViewById(rootView, id);
      if (clRentedUnits == null) {
        break missingId;
      }

      id = R.id.clTotalEarnings;
      ConstraintLayout clTotalEarnings = ViewBindings.findChildViewById(rootView, id);
      if (clTotalEarnings == null) {
        break missingId;
      }

      id = R.id.clTotalUnits;
      ConstraintLayout clTotalUnits = ViewBindings.findChildViewById(rootView, id);
      if (clTotalUnits == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.ivGrayBG;
      ImageView ivGrayBG = ViewBindings.findChildViewById(rootView, id);
      if (ivGrayBG == null) {
        break missingId;
      }

      id = R.id.tabLayoutComplaints;
      TabLayout tabLayoutComplaints = ViewBindings.findChildViewById(rootView, id);
      if (tabLayoutComplaints == null) {
        break missingId;
      }

      id = R.id.tvAvailableUnits;
      TextView tvAvailableUnits = ViewBindings.findChildViewById(rootView, id);
      if (tvAvailableUnits == null) {
        break missingId;
      }

      id = R.id.tvComplaints;
      TextView tvComplaints = ViewBindings.findChildViewById(rootView, id);
      if (tvComplaints == null) {
        break missingId;
      }

      id = R.id.tvComplaintsList;
      TextView tvComplaintsList = ViewBindings.findChildViewById(rootView, id);
      if (tvComplaintsList == null) {
        break missingId;
      }

      id = R.id.tvDashboard;
      TextView tvDashboard = ViewBindings.findChildViewById(rootView, id);
      if (tvDashboard == null) {
        break missingId;
      }

      id = R.id.tvRentedUnits;
      TextView tvRentedUnits = ViewBindings.findChildViewById(rootView, id);
      if (tvRentedUnits == null) {
        break missingId;
      }

      id = R.id.tvTenant1;
      TextView tvTenant1 = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant1 == null) {
        break missingId;
      }

      id = R.id.tvTenant1Complaints;
      TextView tvTenant1Complaints = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant1Complaints == null) {
        break missingId;
      }

      id = R.id.tvTenant2;
      TextView tvTenant2 = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant2 == null) {
        break missingId;
      }

      id = R.id.tvTenant2Complaints;
      TextView tvTenant2Complaints = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant2Complaints == null) {
        break missingId;
      }

      id = R.id.tvTenant3;
      TextView tvTenant3 = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant3 == null) {
        break missingId;
      }

      id = R.id.tvTenant3Complaints;
      TextView tvTenant3Complaints = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant3Complaints == null) {
        break missingId;
      }

      id = R.id.tvTenant4;
      TextView tvTenant4 = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant4 == null) {
        break missingId;
      }

      id = R.id.tvTenant4Complaints;
      TextView tvTenant4Complaints = ViewBindings.findChildViewById(rootView, id);
      if (tvTenant4Complaints == null) {
        break missingId;
      }

      id = R.id.tvTenantList;
      TextView tvTenantList = ViewBindings.findChildViewById(rootView, id);
      if (tvTenantList == null) {
        break missingId;
      }

      id = R.id.tvTotalEarnings;
      TextView tvTotalEarnings = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalEarnings == null) {
        break missingId;
      }

      id = R.id.tvTotalEarningsNumber;
      TextView tvTotalEarningsNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalEarningsNumber == null) {
        break missingId;
      }

      id = R.id.tvTotalUnits;
      TextView tvTotalUnits = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalUnits == null) {
        break missingId;
      }

      return new LandlordHomeFragmentBinding((ConstraintLayout) rootView, clAvailableUnits,
          clComplaints, clRentedUnits, clTotalEarnings, clTotalUnits, imageView2, ivGrayBG,
          tabLayoutComplaints, tvAvailableUnits, tvComplaints, tvComplaintsList, tvDashboard,
          tvRentedUnits, tvTenant1, tvTenant1Complaints, tvTenant2, tvTenant2Complaints, tvTenant3,
          tvTenant3Complaints, tvTenant4, tvTenant4Complaints, tvTenantList, tvTotalEarnings,
          tvTotalEarningsNumber, tvTotalUnits);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
