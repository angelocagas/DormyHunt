// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PaymentFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView card;

  @NonNull
  public final CardView card2;

  @NonNull
  public final ConstraintLayout cons;

  @NonNull
  public final ConstraintLayout conss;

  @NonNull
  public final TextView duedate;

  @NonNull
  public final TextView duepayment;

  @NonNull
  public final ImageView landlordprofile;

  @NonNull
  public final TextView lblpaymentmethods;

  @NonNull
  public final AppCompatButton payrentbtn;

  @NonNull
  public final TextView php;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView refnum;

  @NonNull
  public final TextView tvGcashNum;

  @NonNull
  public final TextView tvduedate;

  @NonNull
  public final TextView tvduepayment;

  @NonNull
  public final TextView tvlandlordname;

  @NonNull
  public final TextView tvlocation;

  @NonNull
  public final TextView tvpaymentdetails;

  @NonNull
  public final TextView tvpaymentmehtods;

  @NonNull
  public final TextView tvreferenceNumber;

  @NonNull
  public final View view;

  private PaymentFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull CardView card,
      @NonNull CardView card2, @NonNull ConstraintLayout cons, @NonNull ConstraintLayout conss,
      @NonNull TextView duedate, @NonNull TextView duepayment, @NonNull ImageView landlordprofile,
      @NonNull TextView lblpaymentmethods, @NonNull AppCompatButton payrentbtn,
      @NonNull TextView php, @NonNull ProgressBar progressBar, @NonNull TextView refnum,
      @NonNull TextView tvGcashNum, @NonNull TextView tvduedate, @NonNull TextView tvduepayment,
      @NonNull TextView tvlandlordname, @NonNull TextView tvlocation,
      @NonNull TextView tvpaymentdetails, @NonNull TextView tvpaymentmehtods,
      @NonNull TextView tvreferenceNumber, @NonNull View view) {
    this.rootView = rootView;
    this.card = card;
    this.card2 = card2;
    this.cons = cons;
    this.conss = conss;
    this.duedate = duedate;
    this.duepayment = duepayment;
    this.landlordprofile = landlordprofile;
    this.lblpaymentmethods = lblpaymentmethods;
    this.payrentbtn = payrentbtn;
    this.php = php;
    this.progressBar = progressBar;
    this.refnum = refnum;
    this.tvGcashNum = tvGcashNum;
    this.tvduedate = tvduedate;
    this.tvduepayment = tvduepayment;
    this.tvlandlordname = tvlandlordname;
    this.tvlocation = tvlocation;
    this.tvpaymentdetails = tvpaymentdetails;
    this.tvpaymentmehtods = tvpaymentmehtods;
    this.tvreferenceNumber = tvreferenceNumber;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.payment_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PaymentFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.card2;
      CardView card2 = ViewBindings.findChildViewById(rootView, id);
      if (card2 == null) {
        break missingId;
      }

      id = R.id.cons;
      ConstraintLayout cons = ViewBindings.findChildViewById(rootView, id);
      if (cons == null) {
        break missingId;
      }

      id = R.id.conss;
      ConstraintLayout conss = ViewBindings.findChildViewById(rootView, id);
      if (conss == null) {
        break missingId;
      }

      id = R.id.duedate;
      TextView duedate = ViewBindings.findChildViewById(rootView, id);
      if (duedate == null) {
        break missingId;
      }

      id = R.id.duepayment;
      TextView duepayment = ViewBindings.findChildViewById(rootView, id);
      if (duepayment == null) {
        break missingId;
      }

      id = R.id.landlordprofile;
      ImageView landlordprofile = ViewBindings.findChildViewById(rootView, id);
      if (landlordprofile == null) {
        break missingId;
      }

      id = R.id.lblpaymentmethods;
      TextView lblpaymentmethods = ViewBindings.findChildViewById(rootView, id);
      if (lblpaymentmethods == null) {
        break missingId;
      }

      id = R.id.payrentbtn;
      AppCompatButton payrentbtn = ViewBindings.findChildViewById(rootView, id);
      if (payrentbtn == null) {
        break missingId;
      }

      id = R.id.php;
      TextView php = ViewBindings.findChildViewById(rootView, id);
      if (php == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.refnum;
      TextView refnum = ViewBindings.findChildViewById(rootView, id);
      if (refnum == null) {
        break missingId;
      }

      id = R.id.tvGcashNum;
      TextView tvGcashNum = ViewBindings.findChildViewById(rootView, id);
      if (tvGcashNum == null) {
        break missingId;
      }

      id = R.id.tvduedate;
      TextView tvduedate = ViewBindings.findChildViewById(rootView, id);
      if (tvduedate == null) {
        break missingId;
      }

      id = R.id.tvduepayment;
      TextView tvduepayment = ViewBindings.findChildViewById(rootView, id);
      if (tvduepayment == null) {
        break missingId;
      }

      id = R.id.tvlandlordname;
      TextView tvlandlordname = ViewBindings.findChildViewById(rootView, id);
      if (tvlandlordname == null) {
        break missingId;
      }

      id = R.id.tvlocation;
      TextView tvlocation = ViewBindings.findChildViewById(rootView, id);
      if (tvlocation == null) {
        break missingId;
      }

      id = R.id.tvpaymentdetails;
      TextView tvpaymentdetails = ViewBindings.findChildViewById(rootView, id);
      if (tvpaymentdetails == null) {
        break missingId;
      }

      id = R.id.tvpaymentmehtods;
      TextView tvpaymentmehtods = ViewBindings.findChildViewById(rootView, id);
      if (tvpaymentmehtods == null) {
        break missingId;
      }

      id = R.id.tvreferenceNumber;
      TextView tvreferenceNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvreferenceNumber == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new PaymentFragmentBinding((ConstraintLayout) rootView, card, card2, cons, conss,
          duedate, duepayment, landlordprofile, lblpaymentmethods, payrentbtn, php, progressBar,
          refnum, tvGcashNum, tvduedate, tvduepayment, tvlandlordname, tvlocation, tvpaymentdetails,
          tvpaymentmehtods, tvreferenceNumber, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
