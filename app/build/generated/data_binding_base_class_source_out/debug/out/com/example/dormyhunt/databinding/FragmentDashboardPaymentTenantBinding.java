// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardPaymentTenantBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CalendarView calendar;

  @NonNull
  public final CardView card;

  @NonNull
  public final ConstraintLayout cons;

  @NonNull
  public final ImageView dormprofile;

  @NonNull
  public final TextView duedate;

  @NonNull
  public final TextView duepayment;

  @NonNull
  public final CardView ivpay;

  @NonNull
  public final ImageView ivpaybg;

  @NonNull
  public final CardView ivrate;

  @NonNull
  public final ImageView ivratebg;

  @NonNull
  public final CardView ivrecords;

  @NonNull
  public final ImageView ivrecordsbg;

  @NonNull
  public final CardView ivschedule;

  @NonNull
  public final ImageView ivschedulebg;

  @NonNull
  public final TextView php;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerpayment;

  @NonNull
  public final TextView refnum;

  @NonNull
  public final TextView tvduedate;

  @NonNull
  public final TextView tvduepayment;

  @NonNull
  public final TextView tvlandlordname;

  @NonNull
  public final TextView tvlistapprove;

  @NonNull
  public final TextView tvlistdate;

  @NonNull
  public final TextView tvlistpaid;

  @NonNull
  public final TextView tvlistreference;

  @NonNull
  public final TextView tvrendcontractdate;

  @NonNull
  public final View view;

  @NonNull
  public final View view3;

  private FragmentDashboardPaymentTenantBinding(@NonNull NestedScrollView rootView,
      @NonNull CalendarView calendar, @NonNull CardView card, @NonNull ConstraintLayout cons,
      @NonNull ImageView dormprofile, @NonNull TextView duedate, @NonNull TextView duepayment,
      @NonNull CardView ivpay, @NonNull ImageView ivpaybg, @NonNull CardView ivrate,
      @NonNull ImageView ivratebg, @NonNull CardView ivrecords, @NonNull ImageView ivrecordsbg,
      @NonNull CardView ivschedule, @NonNull ImageView ivschedulebg, @NonNull TextView php,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerpayment,
      @NonNull TextView refnum, @NonNull TextView tvduedate, @NonNull TextView tvduepayment,
      @NonNull TextView tvlandlordname, @NonNull TextView tvlistapprove,
      @NonNull TextView tvlistdate, @NonNull TextView tvlistpaid, @NonNull TextView tvlistreference,
      @NonNull TextView tvrendcontractdate, @NonNull View view, @NonNull View view3) {
    this.rootView = rootView;
    this.calendar = calendar;
    this.card = card;
    this.cons = cons;
    this.dormprofile = dormprofile;
    this.duedate = duedate;
    this.duepayment = duepayment;
    this.ivpay = ivpay;
    this.ivpaybg = ivpaybg;
    this.ivrate = ivrate;
    this.ivratebg = ivratebg;
    this.ivrecords = ivrecords;
    this.ivrecordsbg = ivrecordsbg;
    this.ivschedule = ivschedule;
    this.ivschedulebg = ivschedulebg;
    this.php = php;
    this.progressBar = progressBar;
    this.recyclerpayment = recyclerpayment;
    this.refnum = refnum;
    this.tvduedate = tvduedate;
    this.tvduepayment = tvduepayment;
    this.tvlandlordname = tvlandlordname;
    this.tvlistapprove = tvlistapprove;
    this.tvlistdate = tvlistdate;
    this.tvlistpaid = tvlistpaid;
    this.tvlistreference = tvlistreference;
    this.tvrendcontractdate = tvrendcontractdate;
    this.view = view;
    this.view3 = view3;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardPaymentTenantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardPaymentTenantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard_payment_tenant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardPaymentTenantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendar;
      CalendarView calendar = ViewBindings.findChildViewById(rootView, id);
      if (calendar == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.cons;
      ConstraintLayout cons = ViewBindings.findChildViewById(rootView, id);
      if (cons == null) {
        break missingId;
      }

      id = R.id.dormprofile;
      ImageView dormprofile = ViewBindings.findChildViewById(rootView, id);
      if (dormprofile == null) {
        break missingId;
      }

      id = R.id.duedate;
      TextView duedate = ViewBindings.findChildViewById(rootView, id);
      if (duedate == null) {
        break missingId;
      }

      id = R.id.duepayment;
      TextView duepayment = ViewBindings.findChildViewById(rootView, id);
      if (duepayment == null) {
        break missingId;
      }

      id = R.id.ivpay;
      CardView ivpay = ViewBindings.findChildViewById(rootView, id);
      if (ivpay == null) {
        break missingId;
      }

      id = R.id.ivpaybg;
      ImageView ivpaybg = ViewBindings.findChildViewById(rootView, id);
      if (ivpaybg == null) {
        break missingId;
      }

      id = R.id.ivrate;
      CardView ivrate = ViewBindings.findChildViewById(rootView, id);
      if (ivrate == null) {
        break missingId;
      }

      id = R.id.ivratebg;
      ImageView ivratebg = ViewBindings.findChildViewById(rootView, id);
      if (ivratebg == null) {
        break missingId;
      }

      id = R.id.ivrecords;
      CardView ivrecords = ViewBindings.findChildViewById(rootView, id);
      if (ivrecords == null) {
        break missingId;
      }

      id = R.id.ivrecordsbg;
      ImageView ivrecordsbg = ViewBindings.findChildViewById(rootView, id);
      if (ivrecordsbg == null) {
        break missingId;
      }

      id = R.id.ivschedule;
      CardView ivschedule = ViewBindings.findChildViewById(rootView, id);
      if (ivschedule == null) {
        break missingId;
      }

      id = R.id.ivschedulebg;
      ImageView ivschedulebg = ViewBindings.findChildViewById(rootView, id);
      if (ivschedulebg == null) {
        break missingId;
      }

      id = R.id.php;
      TextView php = ViewBindings.findChildViewById(rootView, id);
      if (php == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerpayment;
      RecyclerView recyclerpayment = ViewBindings.findChildViewById(rootView, id);
      if (recyclerpayment == null) {
        break missingId;
      }

      id = R.id.refnum;
      TextView refnum = ViewBindings.findChildViewById(rootView, id);
      if (refnum == null) {
        break missingId;
      }

      id = R.id.tvduedate;
      TextView tvduedate = ViewBindings.findChildViewById(rootView, id);
      if (tvduedate == null) {
        break missingId;
      }

      id = R.id.tvduepayment;
      TextView tvduepayment = ViewBindings.findChildViewById(rootView, id);
      if (tvduepayment == null) {
        break missingId;
      }

      id = R.id.tvlandlordname;
      TextView tvlandlordname = ViewBindings.findChildViewById(rootView, id);
      if (tvlandlordname == null) {
        break missingId;
      }

      id = R.id.tvlistapprove;
      TextView tvlistapprove = ViewBindings.findChildViewById(rootView, id);
      if (tvlistapprove == null) {
        break missingId;
      }

      id = R.id.tvlistdate;
      TextView tvlistdate = ViewBindings.findChildViewById(rootView, id);
      if (tvlistdate == null) {
        break missingId;
      }

      id = R.id.tvlistpaid;
      TextView tvlistpaid = ViewBindings.findChildViewById(rootView, id);
      if (tvlistpaid == null) {
        break missingId;
      }

      id = R.id.tvlistreference;
      TextView tvlistreference = ViewBindings.findChildViewById(rootView, id);
      if (tvlistreference == null) {
        break missingId;
      }

      id = R.id.tvrendcontractdate;
      TextView tvrendcontractdate = ViewBindings.findChildViewById(rootView, id);
      if (tvrendcontractdate == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      return new FragmentDashboardPaymentTenantBinding((NestedScrollView) rootView, calendar, card,
          cons, dormprofile, duedate, duepayment, ivpay, ivpaybg, ivrate, ivratebg, ivrecords,
          ivrecordsbg, ivschedule, ivschedulebg, php, progressBar, recyclerpayment, refnum,
          tvduedate, tvduepayment, tvlandlordname, tvlistapprove, tvlistdate, tvlistpaid,
          tvlistreference, tvrendcontractdate, view, view3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
