// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.dormyhunt.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDormitoryDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Amenities;

  @NonNull
  public final TextView Amenities2Listtxt;

  @NonNull
  public final TextView AmenitiesListtxt;

  @NonNull
  public final TextView Availableroomtxt;

  @NonNull
  public final TextView Bathroomtxt;

  @NonNull
  public final TextView Electricitytxt;

  @NonNull
  public final TextView Exact;

  @NonNull
  public final TextView Landlordinfo;

  @NonNull
  public final TextView MinimumStaytxt;

  @NonNull
  public final TextView PaymentMethodtxt;

  @NonNull
  public final TextView Property;

  @NonNull
  public final RelativeLayout RI;

  @NonNull
  public final RatingBar Ratingbar;

  @NonNull
  public final TextView Ratingtxt;

  @NonNull
  public final TextView Room;

  @NonNull
  public final TextView RoomCapacitytxt;

  @NonNull
  public final TextView ViewContent;

  @NonNull
  public final TextView Watertxt;

  @NonNull
  public final RelativeLayout amenitieslayout;

  @NonNull
  public final TextView availabelbl;

  @NonNull
  public final AppCompatButton backbtn;

  @NonNull
  public final RelativeLayout bottomlevel;

  @NonNull
  public final AppCompatButton btnAddToSaved;

  @NonNull
  public final AppCompatButton btnChatLandlord;

  @NonNull
  public final AppCompatButton btnRemoveFromSaved;

  @NonNull
  public final CardView cardViewImage;

  @NonNull
  public final CardView cardviewpermitImage;

  @NonNull
  public final CardView cardviewqrcodeimage;

  @NonNull
  public final TextView contactTxt;

  @NonNull
  public final TextView contt;

  @NonNull
  public final View dividerTop;

  @NonNull
  public final RelativeLayout dorminfolayout;

  @NonNull
  public final TextView emailtxt;

  @NonNull
  public final TextView emailview;

  @NonNull
  public final AppCompatButton inquirebtn;

  @NonNull
  public final CardView ivDormitoryImagecardview;

  @NonNull
  public final ImageView ivProfilePicture;

  @NonNull
  public final RelativeLayout landlordinfolayout;

  @NonNull
  public final TextView lblGenderRestrictions;

  @NonNull
  public final TextView lblbath;

  @NonNull
  public final TextView lblpay;

  @NonNull
  public final TextView lblrentalterms;

  @NonNull
  public final TextView lblwaterr;

  @NonNull
  public final ImageView lord;

  @NonNull
  public final TextView maxx;

  @NonNull
  public final TextView monthlytxt;

  @NonNull
  public final TextView occupiedtxt;

  @NonNull
  public final TextView pay;

  @NonNull
  public final RelativeLayout paymentlayout;

  @NonNull
  public final ImageView permitImage;

  @NonNull
  public final RelativeLayout permitlayout;

  @NonNull
  public final TextView permittxt;

  @NonNull
  public final RelativeLayout propertylayout;

  @NonNull
  public final RelativeLayout qrcode;

  @NonNull
  public final ImageView qrcodeimage;

  @NonNull
  public final TextView qrcodetxt;

  @NonNull
  public final TextView roommm;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView textDormName;

  @NonNull
  public final TextView textDormPrice;

  @NonNull
  public final TextView textDormloc;

  @NonNull
  public final TextView tvGenderRestriction;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentDormitoryDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView Amenities, @NonNull TextView Amenities2Listtxt,
      @NonNull TextView AmenitiesListtxt, @NonNull TextView Availableroomtxt,
      @NonNull TextView Bathroomtxt, @NonNull TextView Electricitytxt, @NonNull TextView Exact,
      @NonNull TextView Landlordinfo, @NonNull TextView MinimumStaytxt,
      @NonNull TextView PaymentMethodtxt, @NonNull TextView Property, @NonNull RelativeLayout RI,
      @NonNull RatingBar Ratingbar, @NonNull TextView Ratingtxt, @NonNull TextView Room,
      @NonNull TextView RoomCapacitytxt, @NonNull TextView ViewContent, @NonNull TextView Watertxt,
      @NonNull RelativeLayout amenitieslayout, @NonNull TextView availabelbl,
      @NonNull AppCompatButton backbtn, @NonNull RelativeLayout bottomlevel,
      @NonNull AppCompatButton btnAddToSaved, @NonNull AppCompatButton btnChatLandlord,
      @NonNull AppCompatButton btnRemoveFromSaved, @NonNull CardView cardViewImage,
      @NonNull CardView cardviewpermitImage, @NonNull CardView cardviewqrcodeimage,
      @NonNull TextView contactTxt, @NonNull TextView contt, @NonNull View dividerTop,
      @NonNull RelativeLayout dorminfolayout, @NonNull TextView emailtxt,
      @NonNull TextView emailview, @NonNull AppCompatButton inquirebtn,
      @NonNull CardView ivDormitoryImagecardview, @NonNull ImageView ivProfilePicture,
      @NonNull RelativeLayout landlordinfolayout, @NonNull TextView lblGenderRestrictions,
      @NonNull TextView lblbath, @NonNull TextView lblpay, @NonNull TextView lblrentalterms,
      @NonNull TextView lblwaterr, @NonNull ImageView lord, @NonNull TextView maxx,
      @NonNull TextView monthlytxt, @NonNull TextView occupiedtxt, @NonNull TextView pay,
      @NonNull RelativeLayout paymentlayout, @NonNull ImageView permitImage,
      @NonNull RelativeLayout permitlayout, @NonNull TextView permittxt,
      @NonNull RelativeLayout propertylayout, @NonNull RelativeLayout qrcode,
      @NonNull ImageView qrcodeimage, @NonNull TextView qrcodetxt, @NonNull TextView roommm,
      @NonNull TabLayout tabLayout, @NonNull TextView textDormName, @NonNull TextView textDormPrice,
      @NonNull TextView textDormloc, @NonNull TextView tvGenderRestriction,
      @NonNull TextView tvUserName, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.Amenities = Amenities;
    this.Amenities2Listtxt = Amenities2Listtxt;
    this.AmenitiesListtxt = AmenitiesListtxt;
    this.Availableroomtxt = Availableroomtxt;
    this.Bathroomtxt = Bathroomtxt;
    this.Electricitytxt = Electricitytxt;
    this.Exact = Exact;
    this.Landlordinfo = Landlordinfo;
    this.MinimumStaytxt = MinimumStaytxt;
    this.PaymentMethodtxt = PaymentMethodtxt;
    this.Property = Property;
    this.RI = RI;
    this.Ratingbar = Ratingbar;
    this.Ratingtxt = Ratingtxt;
    this.Room = Room;
    this.RoomCapacitytxt = RoomCapacitytxt;
    this.ViewContent = ViewContent;
    this.Watertxt = Watertxt;
    this.amenitieslayout = amenitieslayout;
    this.availabelbl = availabelbl;
    this.backbtn = backbtn;
    this.bottomlevel = bottomlevel;
    this.btnAddToSaved = btnAddToSaved;
    this.btnChatLandlord = btnChatLandlord;
    this.btnRemoveFromSaved = btnRemoveFromSaved;
    this.cardViewImage = cardViewImage;
    this.cardviewpermitImage = cardviewpermitImage;
    this.cardviewqrcodeimage = cardviewqrcodeimage;
    this.contactTxt = contactTxt;
    this.contt = contt;
    this.dividerTop = dividerTop;
    this.dorminfolayout = dorminfolayout;
    this.emailtxt = emailtxt;
    this.emailview = emailview;
    this.inquirebtn = inquirebtn;
    this.ivDormitoryImagecardview = ivDormitoryImagecardview;
    this.ivProfilePicture = ivProfilePicture;
    this.landlordinfolayout = landlordinfolayout;
    this.lblGenderRestrictions = lblGenderRestrictions;
    this.lblbath = lblbath;
    this.lblpay = lblpay;
    this.lblrentalterms = lblrentalterms;
    this.lblwaterr = lblwaterr;
    this.lord = lord;
    this.maxx = maxx;
    this.monthlytxt = monthlytxt;
    this.occupiedtxt = occupiedtxt;
    this.pay = pay;
    this.paymentlayout = paymentlayout;
    this.permitImage = permitImage;
    this.permitlayout = permitlayout;
    this.permittxt = permittxt;
    this.propertylayout = propertylayout;
    this.qrcode = qrcode;
    this.qrcodeimage = qrcodeimage;
    this.qrcodetxt = qrcodetxt;
    this.roommm = roommm;
    this.tabLayout = tabLayout;
    this.textDormName = textDormName;
    this.textDormPrice = textDormPrice;
    this.textDormloc = textDormloc;
    this.tvGenderRestriction = tvGenderRestriction;
    this.tvUserName = tvUserName;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDormitoryDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDormitoryDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dormitory_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDormitoryDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Amenities;
      TextView Amenities = ViewBindings.findChildViewById(rootView, id);
      if (Amenities == null) {
        break missingId;
      }

      id = R.id.Amenities2Listtxt;
      TextView Amenities2Listtxt = ViewBindings.findChildViewById(rootView, id);
      if (Amenities2Listtxt == null) {
        break missingId;
      }

      id = R.id.AmenitiesListtxt;
      TextView AmenitiesListtxt = ViewBindings.findChildViewById(rootView, id);
      if (AmenitiesListtxt == null) {
        break missingId;
      }

      id = R.id.Availableroomtxt;
      TextView Availableroomtxt = ViewBindings.findChildViewById(rootView, id);
      if (Availableroomtxt == null) {
        break missingId;
      }

      id = R.id.Bathroomtxt;
      TextView Bathroomtxt = ViewBindings.findChildViewById(rootView, id);
      if (Bathroomtxt == null) {
        break missingId;
      }

      id = R.id.Electricitytxt;
      TextView Electricitytxt = ViewBindings.findChildViewById(rootView, id);
      if (Electricitytxt == null) {
        break missingId;
      }

      id = R.id.Exact;
      TextView Exact = ViewBindings.findChildViewById(rootView, id);
      if (Exact == null) {
        break missingId;
      }

      id = R.id.Landlordinfo;
      TextView Landlordinfo = ViewBindings.findChildViewById(rootView, id);
      if (Landlordinfo == null) {
        break missingId;
      }

      id = R.id.MinimumStaytxt;
      TextView MinimumStaytxt = ViewBindings.findChildViewById(rootView, id);
      if (MinimumStaytxt == null) {
        break missingId;
      }

      id = R.id.PaymentMethodtxt;
      TextView PaymentMethodtxt = ViewBindings.findChildViewById(rootView, id);
      if (PaymentMethodtxt == null) {
        break missingId;
      }

      id = R.id.Property;
      TextView Property = ViewBindings.findChildViewById(rootView, id);
      if (Property == null) {
        break missingId;
      }

      id = R.id.RI;
      RelativeLayout RI = ViewBindings.findChildViewById(rootView, id);
      if (RI == null) {
        break missingId;
      }

      id = R.id.Ratingbar;
      RatingBar Ratingbar = ViewBindings.findChildViewById(rootView, id);
      if (Ratingbar == null) {
        break missingId;
      }

      id = R.id.Ratingtxt;
      TextView Ratingtxt = ViewBindings.findChildViewById(rootView, id);
      if (Ratingtxt == null) {
        break missingId;
      }

      id = R.id.Room;
      TextView Room = ViewBindings.findChildViewById(rootView, id);
      if (Room == null) {
        break missingId;
      }

      id = R.id.RoomCapacitytxt;
      TextView RoomCapacitytxt = ViewBindings.findChildViewById(rootView, id);
      if (RoomCapacitytxt == null) {
        break missingId;
      }

      id = R.id.ViewContent;
      TextView ViewContent = ViewBindings.findChildViewById(rootView, id);
      if (ViewContent == null) {
        break missingId;
      }

      id = R.id.Watertxt;
      TextView Watertxt = ViewBindings.findChildViewById(rootView, id);
      if (Watertxt == null) {
        break missingId;
      }

      id = R.id.amenitieslayout;
      RelativeLayout amenitieslayout = ViewBindings.findChildViewById(rootView, id);
      if (amenitieslayout == null) {
        break missingId;
      }

      id = R.id.availabelbl;
      TextView availabelbl = ViewBindings.findChildViewById(rootView, id);
      if (availabelbl == null) {
        break missingId;
      }

      id = R.id.backbtn;
      AppCompatButton backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.bottomlevel;
      RelativeLayout bottomlevel = ViewBindings.findChildViewById(rootView, id);
      if (bottomlevel == null) {
        break missingId;
      }

      id = R.id.btnAddToSaved;
      AppCompatButton btnAddToSaved = ViewBindings.findChildViewById(rootView, id);
      if (btnAddToSaved == null) {
        break missingId;
      }

      id = R.id.btnChatLandlord;
      AppCompatButton btnChatLandlord = ViewBindings.findChildViewById(rootView, id);
      if (btnChatLandlord == null) {
        break missingId;
      }

      id = R.id.btnRemoveFromSaved;
      AppCompatButton btnRemoveFromSaved = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveFromSaved == null) {
        break missingId;
      }

      id = R.id.cardViewImage;
      CardView cardViewImage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewImage == null) {
        break missingId;
      }

      id = R.id.cardviewpermitImage;
      CardView cardviewpermitImage = ViewBindings.findChildViewById(rootView, id);
      if (cardviewpermitImage == null) {
        break missingId;
      }

      id = R.id.cardviewqrcodeimage;
      CardView cardviewqrcodeimage = ViewBindings.findChildViewById(rootView, id);
      if (cardviewqrcodeimage == null) {
        break missingId;
      }

      id = R.id.contactTxt;
      TextView contactTxt = ViewBindings.findChildViewById(rootView, id);
      if (contactTxt == null) {
        break missingId;
      }

      id = R.id.contt;
      TextView contt = ViewBindings.findChildViewById(rootView, id);
      if (contt == null) {
        break missingId;
      }

      id = R.id.dividerTop;
      View dividerTop = ViewBindings.findChildViewById(rootView, id);
      if (dividerTop == null) {
        break missingId;
      }

      id = R.id.dorminfolayout;
      RelativeLayout dorminfolayout = ViewBindings.findChildViewById(rootView, id);
      if (dorminfolayout == null) {
        break missingId;
      }

      id = R.id.emailtxt;
      TextView emailtxt = ViewBindings.findChildViewById(rootView, id);
      if (emailtxt == null) {
        break missingId;
      }

      id = R.id.emailview;
      TextView emailview = ViewBindings.findChildViewById(rootView, id);
      if (emailview == null) {
        break missingId;
      }

      id = R.id.inquirebtn;
      AppCompatButton inquirebtn = ViewBindings.findChildViewById(rootView, id);
      if (inquirebtn == null) {
        break missingId;
      }

      id = R.id.ivDormitoryImagecardview;
      CardView ivDormitoryImagecardview = ViewBindings.findChildViewById(rootView, id);
      if (ivDormitoryImagecardview == null) {
        break missingId;
      }

      id = R.id.ivProfilePicture;
      ImageView ivProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (ivProfilePicture == null) {
        break missingId;
      }

      id = R.id.landlordinfolayout;
      RelativeLayout landlordinfolayout = ViewBindings.findChildViewById(rootView, id);
      if (landlordinfolayout == null) {
        break missingId;
      }

      id = R.id.lblGenderRestrictions;
      TextView lblGenderRestrictions = ViewBindings.findChildViewById(rootView, id);
      if (lblGenderRestrictions == null) {
        break missingId;
      }

      id = R.id.lblbath;
      TextView lblbath = ViewBindings.findChildViewById(rootView, id);
      if (lblbath == null) {
        break missingId;
      }

      id = R.id.lblpay;
      TextView lblpay = ViewBindings.findChildViewById(rootView, id);
      if (lblpay == null) {
        break missingId;
      }

      id = R.id.lblrentalterms;
      TextView lblrentalterms = ViewBindings.findChildViewById(rootView, id);
      if (lblrentalterms == null) {
        break missingId;
      }

      id = R.id.lblwaterr;
      TextView lblwaterr = ViewBindings.findChildViewById(rootView, id);
      if (lblwaterr == null) {
        break missingId;
      }

      id = R.id.lord;
      ImageView lord = ViewBindings.findChildViewById(rootView, id);
      if (lord == null) {
        break missingId;
      }

      id = R.id.maxx;
      TextView maxx = ViewBindings.findChildViewById(rootView, id);
      if (maxx == null) {
        break missingId;
      }

      id = R.id.monthlytxt;
      TextView monthlytxt = ViewBindings.findChildViewById(rootView, id);
      if (monthlytxt == null) {
        break missingId;
      }

      id = R.id.occupiedtxt;
      TextView occupiedtxt = ViewBindings.findChildViewById(rootView, id);
      if (occupiedtxt == null) {
        break missingId;
      }

      id = R.id.pay;
      TextView pay = ViewBindings.findChildViewById(rootView, id);
      if (pay == null) {
        break missingId;
      }

      id = R.id.paymentlayout;
      RelativeLayout paymentlayout = ViewBindings.findChildViewById(rootView, id);
      if (paymentlayout == null) {
        break missingId;
      }

      id = R.id.permitImage;
      ImageView permitImage = ViewBindings.findChildViewById(rootView, id);
      if (permitImage == null) {
        break missingId;
      }

      id = R.id.permitlayout;
      RelativeLayout permitlayout = ViewBindings.findChildViewById(rootView, id);
      if (permitlayout == null) {
        break missingId;
      }

      id = R.id.permittxt;
      TextView permittxt = ViewBindings.findChildViewById(rootView, id);
      if (permittxt == null) {
        break missingId;
      }

      id = R.id.propertylayout;
      RelativeLayout propertylayout = ViewBindings.findChildViewById(rootView, id);
      if (propertylayout == null) {
        break missingId;
      }

      id = R.id.qrcode;
      RelativeLayout qrcode = ViewBindings.findChildViewById(rootView, id);
      if (qrcode == null) {
        break missingId;
      }

      id = R.id.qrcodeimage;
      ImageView qrcodeimage = ViewBindings.findChildViewById(rootView, id);
      if (qrcodeimage == null) {
        break missingId;
      }

      id = R.id.qrcodetxt;
      TextView qrcodetxt = ViewBindings.findChildViewById(rootView, id);
      if (qrcodetxt == null) {
        break missingId;
      }

      id = R.id.roommm;
      TextView roommm = ViewBindings.findChildViewById(rootView, id);
      if (roommm == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.textDormName;
      TextView textDormName = ViewBindings.findChildViewById(rootView, id);
      if (textDormName == null) {
        break missingId;
      }

      id = R.id.textDormPrice;
      TextView textDormPrice = ViewBindings.findChildViewById(rootView, id);
      if (textDormPrice == null) {
        break missingId;
      }

      id = R.id.textDormloc;
      TextView textDormloc = ViewBindings.findChildViewById(rootView, id);
      if (textDormloc == null) {
        break missingId;
      }

      id = R.id.tvGenderRestriction;
      TextView tvGenderRestriction = ViewBindings.findChildViewById(rootView, id);
      if (tvGenderRestriction == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentDormitoryDetailBinding((ConstraintLayout) rootView, Amenities,
          Amenities2Listtxt, AmenitiesListtxt, Availableroomtxt, Bathroomtxt, Electricitytxt, Exact,
          Landlordinfo, MinimumStaytxt, PaymentMethodtxt, Property, RI, Ratingbar, Ratingtxt, Room,
          RoomCapacitytxt, ViewContent, Watertxt, amenitieslayout, availabelbl, backbtn,
          bottomlevel, btnAddToSaved, btnChatLandlord, btnRemoveFromSaved, cardViewImage,
          cardviewpermitImage, cardviewqrcodeimage, contactTxt, contt, dividerTop, dorminfolayout,
          emailtxt, emailview, inquirebtn, ivDormitoryImagecardview, ivProfilePicture,
          landlordinfolayout, lblGenderRestrictions, lblbath, lblpay, lblrentalterms, lblwaterr,
          lord, maxx, monthlytxt, occupiedtxt, pay, paymentlayout, permitImage, permitlayout,
          permittxt, propertylayout, qrcode, qrcodeimage, qrcodetxt, roommm, tabLayout,
          textDormName, textDormPrice, textDormloc, tvGenderRestriction, tvUserName, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
