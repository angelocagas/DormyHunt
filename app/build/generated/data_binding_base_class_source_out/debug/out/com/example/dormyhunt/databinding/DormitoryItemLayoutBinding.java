// Generated by view binder compiler. Do not edit!
package com.example.dormyhunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dormyhunt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DormitoryItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnRequests;

  @NonNull
  public final AppCompatButton btnView;

  @NonNull
  public final ImageButton ibDelete;

  @NonNull
  public final ImageButton ibEdit;

  @NonNull
  public final ImageView ivQrCode;

  @NonNull
  public final TextView textDormName;

  @NonNull
  public final TextView textDormPrice;

  @NonNull
  public final TextView tvAvailable;

  @NonNull
  public final TextView tvOccupied;

  @NonNull
  public final TextView tvPerMonth;

  @NonNull
  public final TextView tvUnits;

  private DormitoryItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnRequests, @NonNull AppCompatButton btnView,
      @NonNull ImageButton ibDelete, @NonNull ImageButton ibEdit, @NonNull ImageView ivQrCode,
      @NonNull TextView textDormName, @NonNull TextView textDormPrice,
      @NonNull TextView tvAvailable, @NonNull TextView tvOccupied, @NonNull TextView tvPerMonth,
      @NonNull TextView tvUnits) {
    this.rootView = rootView;
    this.btnRequests = btnRequests;
    this.btnView = btnView;
    this.ibDelete = ibDelete;
    this.ibEdit = ibEdit;
    this.ivQrCode = ivQrCode;
    this.textDormName = textDormName;
    this.textDormPrice = textDormPrice;
    this.tvAvailable = tvAvailable;
    this.tvOccupied = tvOccupied;
    this.tvPerMonth = tvPerMonth;
    this.tvUnits = tvUnits;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DormitoryItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DormitoryItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dormitory_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DormitoryItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRequests;
      AppCompatButton btnRequests = ViewBindings.findChildViewById(rootView, id);
      if (btnRequests == null) {
        break missingId;
      }

      id = R.id.btnView;
      AppCompatButton btnView = ViewBindings.findChildViewById(rootView, id);
      if (btnView == null) {
        break missingId;
      }

      id = R.id.ibDelete;
      ImageButton ibDelete = ViewBindings.findChildViewById(rootView, id);
      if (ibDelete == null) {
        break missingId;
      }

      id = R.id.ibEdit;
      ImageButton ibEdit = ViewBindings.findChildViewById(rootView, id);
      if (ibEdit == null) {
        break missingId;
      }

      id = R.id.ivQrCode;
      ImageView ivQrCode = ViewBindings.findChildViewById(rootView, id);
      if (ivQrCode == null) {
        break missingId;
      }

      id = R.id.textDormName;
      TextView textDormName = ViewBindings.findChildViewById(rootView, id);
      if (textDormName == null) {
        break missingId;
      }

      id = R.id.textDormPrice;
      TextView textDormPrice = ViewBindings.findChildViewById(rootView, id);
      if (textDormPrice == null) {
        break missingId;
      }

      id = R.id.tvAvailable;
      TextView tvAvailable = ViewBindings.findChildViewById(rootView, id);
      if (tvAvailable == null) {
        break missingId;
      }

      id = R.id.tvOccupied;
      TextView tvOccupied = ViewBindings.findChildViewById(rootView, id);
      if (tvOccupied == null) {
        break missingId;
      }

      id = R.id.tvPerMonth;
      TextView tvPerMonth = ViewBindings.findChildViewById(rootView, id);
      if (tvPerMonth == null) {
        break missingId;
      }

      id = R.id.tvUnits;
      TextView tvUnits = ViewBindings.findChildViewById(rootView, id);
      if (tvUnits == null) {
        break missingId;
      }

      return new DormitoryItemLayoutBinding((ConstraintLayout) rootView, btnRequests, btnView,
          ibDelete, ibEdit, ivQrCode, textDormName, textDormPrice, tvAvailable, tvOccupied,
          tvPerMonth, tvUnits);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
